extends ../reference_layout.pug

block title
    | OAuth Reference | Mixer Developers

block navbar
    .navbar-wrapper
        .container
            nav.navbar.navbar-inverse: +navbar()
            h1 OAuth Reference
block menu
    .hidden-print.rest-sidebar(role='complementary')
        nav
            ul.nav.nav-stacked
                li: a(href='#quick_details') Quick Details
                li: a(href='#introduction') Introduction
                li: a(href='#registering') Registering Your Application
                li: a(href='#hosts') Hosts
                li: a(href='#using_oauth') Using OAuth
                li: a(href='#shortcode') Short Code Authentication
                li: a(href='#oauth_scopes') OAuth Scopes
block reference
    .page-header
        h2#quick_details Quick details:
        p.
            You can register your OAuth application on your #[a(href='https://mixer.com/lab/oauth' target='_blank') OAuth Clients] page.
            After getting a token there, you can use provide these endpoints to your OAuth client library to dig in:

        ul
            li
                | #[a(href='https://tools.ietf.org/html/rfc6749#section-3.1') Authorize endpoint]:
                code https://mixer.com/oauth/authorize
            li
                | #[a(href='https://tools.ietf.org/html/rfc6749#section-3.2') Token endpoint]:
                code https://mixer.com/api/v1/oauth/token
        h3 Token Expiry
        table.table
            tr
                th Type
                th Expiry Time
                th Notes
            tr
                td #[a(href='https://tools.ietf.org/html/rfc6749#section-1.4') Access Token]
                td 6 Hours
                td
            tr
                td #[a(href='https://tools.ietf.org/html/rfc6749#section-1.5') Refresh Token]
                td 1 Year
                td This is single use, if used a new refresh token is issued with the new access token.
            tr
                td Implicit Token
                td 1 Year
                td These are only given out by an #[a(href='https://tools.ietf.org/html/rfc6749#section-1.3.2') Implicit Grant]

    h2#introduction Introduction
    p.
        If you want to act as another user in chat, access a user's private resources as part
        of your app, or just want to use Mixer credentials to authenticate your users,
        it's best to use OAuth so the users' credentials don't need to be stored on your servers.

    p.
        OAuth is a system that replaces traditional user/password combos with app-specific tokens.
        Your app can request a set of tokens for a certain user with a specific set of permissions.
        This way your app only gets access to what it needs and all other details will stay hidden.
        It's a win-win scenario for both your app's functionality, and our users' privacy.

    p To start using OAuth create an application as described below.

    h2#registering Registering Your Application
    p.
        To create an application, head over to your #[a(href='https://mixer.com/lab/oauth' target='_blank') OAuth Clients] page.
        Once there, click the blue "Create New Client" button and it'll open the creation form.

    p.
        On this page you'll need to enter some basic details about your application,
        like its name, website and logo.
        All of these details will be displayed publicly to users of your app.

    h3#hosts Hosts
    p.
        The hosts parameter is an important one; it tells us what domains your application
        can redirect to. This should be set to domains you control.
        You can use wildcards. For example, #[code *.mixer.com],
        will allow redirects to all subdomains on #[code mixer.com],
        but not #[code mixer.com] itself.
        You can enter multiple hosts by separating them with commas.

    h2#using_oauth Using OAuth
    p.
        The #[a(href='https://tools.ietf.org/html/rfc6749') OAuth 2.0 protocol] is simple enough,
        but that doesn't mean you should implement it from scratch.
        Most popular languages will have a library to easily interface with an OAuth server.
        A partial list of suggested clients
        can be found on #[a(href='http://oauth.net/code/' target='_blank') this website].
        If you're interested in reading an in depth explanation of how OAuth works
        head #[a(href='https://aaronparecki.com/articles/2012/07/29/1/oauth2-simplified' target='_blank') here].

    .alert.alert-warning
        p.
            We #[strong strongly] advise you to use an existing
            #[a(href='http://oauth.net/code/' target='_blank') OAuth client library] whenever possible,
            rather than writing your own implementation. OAuth is hard to securely implement,
            and the time you spend trying to do so would be better spent building something awesome.

        blockquote
            p.
                &quot;To be clear, OAuth 2.0 at the hand of a developer with deep understanding
                of web security will likely result is a secure implementation.
                However, at the hands of most developers – as has been the experience
                from the past two years – 2.0 is likely to produce insecure implementations.&quot;
            footer Eran Hammer

    p.
        To use our OAuth implementation you'll just need the URLs which can be found at the top of
        this page and your token from the
        #[a(href='https://mixer.com/lab/oauth' target='_blank') OAuth Clients] page.

    h3#shortcode Authenticating with a short code
    p.
        For convenience, we also provide an alternative authentication method where the user is prompted to enter a temporary code to approve your application. This method makes sense for situations where it is more difficult to embed a browser or require keyboard input from the user.
    ol
        li.
            Your application sends a #[code POST] request to the #[a(href='/rest.html#oauth_shortcode_post' target='_blank') /oauth/shortcode] endpoint to receive a short-lived, six-digit #[code code] and a longer #[code handle].
        li.
            Your application asks the user to go to #[a(href='https://mixer.com/go' target='_blank') mixer.com/go] and enter the #[code code].
        li.
            Your application polls #[a(href='/rest.html#oauth_shortcode_check__handle__get' target='_blank') /oauth/shortcode/check/{handle}] with the value of #[code handle] to check if the code has been used.
        li.
            If the user entered the code and accepted your application, you will receive an OAuth authorization code, #[code code], which you will then pass to the #[a(href='/rest.html#oauth_token_post' target='_blank') /oauth/token] endpoint through the #[a(href='https://tools.ietf.org/html/rfc6749#section-4.1.3' target='_blank') standard authorization_code process].

    h2#oauth_scopes OAuth Scopes
    p.
        To request access to a users' account you need to use scopes.
        Scopes limit the amount of access a certain application has to the account.
        The full list of scopes which can be requested are listed below,
        and are also listed on the endpoints themselves over on
        the #[a(href='/rest.html') REST API reference].

    table.table
        thead
            tr
                th Scope
                th Description
        tbody
            for key in permissionKeys
                - data = permissions[key]
                if !data.administrative
                    tr
                        td: code= key
                        td= data.text

    include ../../snippets/help.pug
