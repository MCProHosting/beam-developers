=version 1
=resource LiveLoading
=method post
=endpoint /live
=description Subscribes to a set of socket events.

include ../../_mixins.jade
include _llnotice.jade

p Using this endpoint, you can subscribe to new events. You'll recieve a standard Comet response back over the websocket. Subsequently, events will be pushed back down the socket directly.

p To subscribe to an event, a client sends a request to this endpoint. The body should contain a #[code slug], will be sent to an interface. The interface is responsible for doing all the mechnical work on the backend, which eventually subscribes to one or many events on Redis, which is our primary means of pubsub within our network. When an event comes in that matches one the interface is listening to, the interface is responsible for taking that data and sending it back down to the user.

p #[b tl;dr] the "slug" you subscribe to determines -- but is not itself -- the events you can expect to receive on the client.

h3 Available Interfaces

table.endpoint-param-table
    tr
        td.name channel:[:id]:update
        td.description  You'll get an event sent down that matches the slug, containing changes on the channel body. The event may not necessarily include the entire channel resource. For example, when a channel goes online an event with the body #[code { online: true }] is sent.
    tr
        td.name channel:[:id]:status
        td.description  Subscribes to the online status of a channel. You'll get events sent down named #[code chat:[id]:StartStreaming] and  #[code chat:[id]:StopStreaming]
    tr
        td.name channel:[:id]:followed
        td.description  Sent when a user follows or unfollows a channel. The body will contain:

            ul
                li An attribute #[code following] - true if the user just followed the channel, false if they unfollowed,
                li and #[code user] - the user object who just followed the channel.
    tr
        td.name user:[:id]:followed
        td.description Sent when the user follows or unfollows a channel. The body will contain:

            ul
                li An attribute #[code following] - true if the user just followed the channel, false if they unfollowed,
                li and #[code channel] - the channel object the user just followed.
    tr
        td.name user:[:id]:achievement
        td.description Sent when a user achievement earning is updated. The body is simply an "earning" record as returned in the #[a(href='/api/achievement/forUser') achievement user listing] endpoint.

h3 Parameters

table.endpoint-param-table
    tr
        td.name slug
        td.description Passed as a string or array of strings. The name(s) of the #[i interface] you wish to subscribe to (see above).
    tr
        td.name meta #[span optional]
        td.description Additional data which can be passed as needed to the interface.

h3 Possible Results

+result("Successful", "200 OK").
    "Subscribed successfully."

+result("Errorful", "400 Bad Request", "Standard Invalid request.")

+result("Errorful", "403 Forbidden").
    "Access denied."

+result("Errorful", "420 Rate Limit").
    "You are subscribed to too many events!"

+result("Errorful", "420 Rate Limit").
    "You are already subscribed to this event!"
